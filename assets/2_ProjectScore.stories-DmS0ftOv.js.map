{"version":3,"file":"2_ProjectScore.stories-DmS0ftOv.js","sources":["../../src/tests/common.ts","../../src/tests/ProjectScore.stories.test.ts","../../src/stories/2_ProjectScore.stories.tsx"],"sourcesContent":["import { BaseModel, MeasureModel, ProjectScoreModel } from \"../lib/models\";\nimport short from \"short-uuid\";\nimport { within, userEvent, expect } from \"@storybook/test\";\n\ntype CanvasType = ReturnType<typeof within>;\n\nexport const addPurpose = async (canvas: CanvasType, num: number) => {\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  );\n  const purposes = await canvas.findAllByRole(\"purpose\", {\n    name: \"textbox\",\n  });\n  expect(purposes.length).toBe(num);\n  await userEvent.type(purposes[num - 1], `中間目的${num}テキスト`);\n  expect(\n    await canvas.findByDisplayValue(`中間目的${num}テキスト`)\n  ).toBeInTheDocument();\n};\n\nexport const addMeasure = async (canvas: CanvasType, num: number) => {\n  await userEvent.click(\n    await canvas.findByRole(\"measure\", { name: \"add-box\" })\n  );\n  const measures = await canvas.findAllByRole(\"measure\", {\n    name: \"textbox\",\n  });\n  expect(measures.length).toBe(num);\n  await userEvent.type(measures[num - 1], `施策${num}テキスト`);\n  expect(\n    await canvas.findByDisplayValue(`施策${num}テキスト`)\n  ).toBeInTheDocument();\n};\n\nexport const addMeasureByIcon = async (\n  canvas: CanvasType,\n  num: number,\n  iconNum: number\n) => {\n  await userEvent.click(\n    (await canvas.findAllByRole(\"measure\", { name: \"add-icon\" }))[iconNum - 1]\n  );\n  const measures = await canvas.findAllByRole(\"measure\", {\n    name: \"textbox\",\n  });\n  expect(measures.length).toBe(num);\n  await userEvent.type(measures[num - 1], `施策${num}テキスト`);\n  expect(\n    await canvas.findByDisplayValue(`施策${num}テキスト`)\n  ).toBeInTheDocument();\n};\n\nexport const getPurpose = async (canvas: CanvasType, num: number) => {\n  return (\n    await canvas.findAllByRole(\"purpose\", {\n      name: \"textbox\",\n    })\n  )[num - 1];\n};\n\nexport const getPurposeCount = async (canvas: CanvasType) => {\n  return (\n    await canvas.findAllByRole(\"purpose\", {\n      name: \"box\",\n    })\n  ).length;\n};\n\nexport const getMeasure = async (canvas: CanvasType, num: number) => {\n  return (\n    await canvas.findAllByRole(\"measure\", {\n      name: \"textbox\",\n    })\n  )[num - 1];\n};\n\nexport const getMeasureCount = async (canvas: CanvasType) => {\n  return (\n    await canvas.findAllByRole(\"measure\", {\n      name: \"textbox\",\n    })\n  ).length;\n};\nexport const createInitialScoreDataWithDuplication = () => {\n  const score = createInitialScoreDataWithComment();\n  score.purposes.push({\n    ...defaultValueWithComment(\"中間目的\"),\n    measures: [\n      defaultMeasureValueWithComment(\"施策3\"),\n      defaultMeasureValueWithComment(\"施策1\"),\n    ],\n  });\n  score.purposes.push({\n    ...defaultValueWithComment(\"中間目的\"),\n    measures: [\n      defaultMeasureValueWithComment(\"施策4\"),\n      defaultMeasureValueWithComment(\"施策1\"),\n    ],\n  });\n  return score;\n};\nexport const createInitialScoreDataWithComment = () => {\n  return {\n    winCondition: defaultValueWithComment(\"勝利条件\"),\n    gainingGoal: defaultValueWithComment(\"獲得目標\"),\n    purposes: [\n      {\n        ...defaultValueWithComment(\"中間目的\"),\n        measures: [\n          defaultMeasureValueWithComment(\"施策1\"),\n          defaultMeasureValueWithComment(\"施策2\"),\n        ],\n      },\n    ],\n    elements: {\n      people: defaultValueWithComment(\"ひと\"),\n      money: defaultValueWithComment(\"お金\"),\n      time: defaultValueWithComment(\"時間\"),\n      quality: defaultValueWithComment(\"クオリティ\"),\n      businessScheme: defaultValueWithComment(\"商流 / 座組\"),\n      environment: defaultValueWithComment(\"環境\"),\n      rival: defaultValueWithComment(\"ライバル\"),\n      foreignEnemy: defaultValueWithComment(\"外敵\"),\n    },\n  } as ProjectScoreModel;\n};\n\nconst defaultValueWithComment = (label: string) => {\n  const value = {\n    uuid: short.generate(),\n    text: label,\n    comment: {\n      uuid: short.generate(),\n      color: \"blue\",\n      text: `${label}のコメント`,\n    },\n  } as BaseModel;\n  return value;\n};\n\nconst defaultMeasureValueWithComment = (label: string) => {\n  const value = defaultValueWithComment(label) as MeasureModel;\n  value.color = \"white\";\n  return value;\n};\n","import { within, userEvent, expect } from \"@storybook/test\";\nimport {\n  addMeasure,\n  addMeasureByIcon,\n  getMeasure,\n  getMeasureCount,\n  addPurpose,\n  getPurpose,\n  getPurposeCount,\n} from \"./common\";\n\ninterface StorybookTestProps {\n  canvasElement: HTMLElement;\n}\n\nexport const editTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  expect(await canvas.findByRole(\"score\", { name: \"box\" })).toBeInTheDocument();\n\n  /* Input eight elements */\n  type LabelType = {\n    [K in string]: string;\n  };\n  const labels: LabelType = {\n    people: \"ひと\",\n    money: \"お金\",\n    time: \"時間\",\n    quality: \"クオリティ\",\n    businessScheme: \"商流 / 座組\",\n    environment: \"環境\",\n    rival: \"ライバル\",\n    foreignEnemy: \"外敵\",\n  };\n  for (const key of Object.keys(labels)) {\n    const box = await canvas.findByRole(\"element\", { name: key });\n    expect(box).toBeInTheDocument();\n    expect(\n      await canvas.findByText(new RegExp(`^${labels[key]}$`))\n    ).toBeInTheDocument();\n    expect(\n      await canvas.findByPlaceholderText(`${labels[key]}を入力`)\n    ).toBeInTheDocument();\n    userEvent.type(\n      await canvas.findByRole(\"element\", { name: `${key}-textbox` }),\n      `${labels[key]}テキスト`\n    );\n    expect(\n      await canvas.findByDisplayValue(`${labels[key]}テキスト`)\n    ).toBeInTheDocument();\n  }\n\n  /* Input win condition */\n  expect(await canvas.findByText(/^勝利条件$/)).toBeInTheDocument();\n  expect(\n    await canvas.findByPlaceholderText(\"勝利条件を入力\")\n  ).toBeInTheDocument();\n  await userEvent.type(\n    await canvas.findByRole(\"win-condition\", { name: \"textbox\" }),\n    \"勝利条件テキスト\"\n  );\n  expect(\n    await canvas.findByDisplayValue(\"勝利条件テキスト\")\n  ).toBeInTheDocument();\n\n  /* Input gaining goal */\n  expect(await canvas.findByText(/^獲得目標$/)).toBeInTheDocument();\n  expect(\n    await canvas.findByPlaceholderText(\"獲得目標を入力\")\n  ).toBeInTheDocument();\n  await userEvent.type(\n    await canvas.findByRole(\"gaining-goal\", { name: \"textbox\" }),\n    \"獲得目標テキスト\"\n  );\n  expect(\n    await canvas.findByDisplayValue(\"獲得目標テキスト\")\n  ).toBeInTheDocument();\n\n  /* Input intermediate purpose */\n  expect(await canvas.findByText(/^中間目的$/)).toBeInTheDocument();\n  expect(\n    await canvas.findByPlaceholderText(\"中間目的を入力\")\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  ).toBeInTheDocument();\n  await userEvent.type(await getPurpose(canvas, 1), \"中間目的1テキスト\");\n  expect(\n    await canvas.findByDisplayValue(\"中間目的1テキスト\")\n  ).toBeInTheDocument();\n\n  /* Input measure */\n  expect(await canvas.findByText(/^施策$/)).toBeInTheDocument();\n  expect((await canvas.findAllByPlaceholderText(\"施策を入力\")).length).toBe(2);\n  const measureTexboxes = await canvas.findAllByRole(\"measure\", {\n    name: \"textbox\",\n  });\n  expect(measureTexboxes.length).toBe(2);\n  for (const i in measureTexboxes) {\n    await userEvent.type(measureTexboxes[i], `施策${Number(i) + 1}テキスト`);\n    expect(\n      await canvas.findByDisplayValue(`施策${Number(i) + 1}テキスト`)\n    ).toBeInTheDocument();\n  }\n\n  /* Add measure & purpose */\n  expect(\n    await canvas.findByRole(\"measure\", { name: \"add-icon\" })\n  ).toBeInTheDocument();\n\n  await addPurpose(canvas, 2);\n  await addMeasure(canvas, 3);\n\n  await addPurpose(canvas, 3);\n  await addMeasure(canvas, 4);\n\n  await addPurpose(canvas, 4);\n  await addMeasure(canvas, 5);\n  await addMeasureByIcon(canvas, 6, 4);\n\n  /* Swap purpose */\n  await userEvent.click(await getPurpose(canvas, 4));\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"up-icon\",\n    })\n  );\n  expect(await getPurpose(canvas, 3)).toHaveTextContent(\"中間目的4テキスト\");\n  expect(await getPurpose(canvas, 4)).toHaveTextContent(\"中間目的3テキスト\");\n  await userEvent.click(await getPurpose(canvas, 3));\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"down-icon\",\n    })\n  );\n  expect(await getPurpose(canvas, 3)).toHaveTextContent(\"中間目的3テキスト\");\n  expect(await getPurpose(canvas, 4)).toHaveTextContent(\"中間目的4テキスト\");\n\n  /* Delete measure and purpose */\n  expect(await getMeasureCount(canvas)).toBe(6);\n  await userEvent.click(await getMeasure(canvas, 6));\n  await userEvent.click(\n    await canvas.findByRole(\"measure\", {\n      name: \"delete-icon\",\n    })\n  );\n  expect(await getMeasureCount(canvas)).toBe(5);\n  await userEvent.click(await getMeasure(canvas, 5));\n  await userEvent.click(\n    await canvas.findByRole(\"measure\", {\n      name: \"delete-icon\",\n    })\n  );\n  expect(await getMeasureCount(canvas)).toBe(4);\n\n  /* Empty measure and purpose */\n  expect(await getPurposeCount(canvas)).toBe(4);\n  await userEvent.click(await getPurpose(canvas, 4));\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"delete-icon\",\n    })\n  );\n  expect(await getPurposeCount(canvas)).toBe(3);\n  await userEvent.click(await getPurpose(canvas, 3));\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"delete-icon\",\n    })\n  );\n  expect(await getPurposeCount(canvas)).toBe(2);\n  await userEvent.click(await getPurpose(canvas, 2));\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"delete-icon\",\n    })\n  );\n  expect(await getPurposeCount(canvas)).toBe(1);\n  await userEvent.click(await getPurpose(canvas, 1));\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"delete-icon\",\n    })\n  );\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", {\n      name: \"add-box\",\n    })\n  );\n  await userEvent.type(await getPurpose(canvas, 1), \"中間目的1テキスト\");\n  await addMeasure(canvas, 1);\n  await addMeasureByIcon(canvas, 2, 1);\n};\n\nexport const feedbackTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  const elements = await canvas.findByRole(\"elements\", { name: \"box\" });\n  expect(elements).toBeInTheDocument();\n\n  type LabelType = {\n    [K in string]: string;\n  };\n  const elementLabels: LabelType = {\n    people: \"ひと\",\n    money: \"お金\",\n    time: \"時間\",\n    quality: \"クオリティ\",\n    businessScheme: \"商流 / 座組\",\n    environment: \"環境\",\n    rival: \"ライバル\",\n    foreignEnemy: \"外敵\",\n  };\n  for (const key of Object.keys(elementLabels)) {\n    const commentIcon = await canvas.findByRole(\"element\", {\n      name: `comment-icon-${key}`,\n    });\n    await userEvent.click(commentIcon);\n    const commentArea = await canvas.findByRole(\"element\", {\n      name: `comment-${key}`,\n    });\n    expect(commentArea).toBeInTheDocument();\n    const commentTexbox = await canvas.findByRole(`${key}-comment`, {\n      name: `textbox`,\n    });\n    await userEvent.type(commentTexbox, `${elementLabels[key]}のコメント`);\n    expect(await canvas.findByDisplayValue(`${elementLabels[key]}のコメント`));\n\n    const commentBox = await canvas.findByRole(`${key}-comment`, {\n      name: \"box\",\n    });\n    await userEvent.click(commentBox);\n    const pallette = await canvas.findByRole(`${key}-comment`, {\n      name: \"palette-icon\",\n    });\n    await userEvent.click(pallette);\n    if (key === \"people\") {\n      const red = await canvas.findByRole(`${key}-comment`, {\n        name: \"color-icon-red\",\n      });\n      await userEvent.click(red);\n      expect(commentBox).toHaveClass(/red/);\n      expect(commentBox).not.toHaveClass(/green/);\n      expect(commentBox).not.toHaveClass(/blue/);\n    } else if (key === \"money\") {\n      const blue = await canvas.findByRole(`${key}-comment`, {\n        name: \"color-icon-blue\",\n      });\n      await userEvent.click(blue);\n      expect(commentBox).not.toHaveClass(/red/);\n      expect(commentBox).not.toHaveClass(/green/);\n      expect(commentBox).toHaveClass(/blue/);\n    } else {\n      const green = await canvas.findByRole(`${key}-comment`, {\n        name: \"color-icon-green\",\n      });\n      expect(green).toBeInTheDocument;\n      expect(commentBox).not.toHaveClass(/red/);\n      expect(commentBox).toHaveClass(/green/);\n      expect(commentBox).not.toHaveClass(/blue/);\n    }\n  }\n\n  const objectiveLabels: LabelType = {\n    \"win-condition\": \"勝利条件\",\n    \"gaining-goal\": \"獲得目標\",\n  };\n  for (const key of Object.keys(objectiveLabels)) {\n    expect(await canvas.findByRole(key, { name: \"box\" })).toBeInTheDocument();\n    const textbox = await canvas.findByRole(key, {\n      name: \"textbox\",\n    });\n    await userEvent.click(textbox);\n\n    const commentIcon = await canvas.findByRole(key, {\n      name: \"comment-icon\",\n    });\n    await userEvent.click(commentIcon);\n\n    const commentArea = await canvas.findByRole(key, {\n      name: \"comment\",\n    });\n    expect(commentArea).toBeInTheDocument();\n    const commentTexbox = await canvas.findByRole(`${key}-comment`, {\n      name: `textbox`,\n    });\n    await userEvent.type(commentTexbox, `${objectiveLabels[key]}のコメント`);\n    expect(\n      await canvas.findByDisplayValue(`${objectiveLabels[key]}のコメント`)\n    );\n\n    const commentBox = await canvas.findByRole(`${key}-comment`, {\n      name: \"box\",\n    });\n    const pallette = await canvas.findByRole(`${key}-comment`, {\n      name: \"palette-icon\",\n    });\n    await userEvent.click(pallette);\n    const green = await canvas.findByRole(`${key}-comment`, {\n      name: \"color-icon-green\",\n    });\n    await userEvent.click(green);\n    expect(commentBox).toHaveClass(/green/);\n    expect(commentBox).not.toHaveClass(/red/);\n    expect(commentBox).not.toHaveClass(/blue/);\n    const red = await canvas.findByRole(`${key}-comment`, {\n      name: \"color-icon-red\",\n    });\n    expect(red).toBeInTheDocument;\n    await userEvent.click(red);\n    expect(commentBox).not.toHaveClass(/green/);\n    expect(commentBox).toHaveClass(/red/);\n    expect(commentBox).not.toHaveClass(/blue/);\n\n    const blue = await canvas.findByRole(`${key}-comment`, {\n      name: \"color-icon-blue\",\n    });\n    await userEvent.click(blue);\n    expect(commentBox).not.toHaveClass(/green/);\n    expect(commentBox).not.toHaveClass(/red/);\n    expect(commentBox).toHaveClass(/blue/);\n  }\n\n  await userEvent.click(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  );\n  for (let i = 0; i < 2; i++) {\n    const commentIcon = (\n      await canvas.findAllByRole(\"purpose\", {\n        name: \"comment-icon\",\n      })\n    )[i];\n    await userEvent.click(commentIcon);\n\n    const commentArea = (\n      await canvas.findAllByRole(\"purpose\", {\n        name: \"comment\",\n      })\n    )[i];\n    expect(commentArea).toBeInTheDocument();\n    const commentTexbox = (\n      await canvas.findAllByRole(\"purpose-comment\", {\n        name: `textbox`,\n      })\n    )[i];\n    await userEvent.type(commentTexbox, `中間目的${i + 1}のコメント`);\n    expect(await canvas.findByDisplayValue(`中間目的${i + 1}のコメント`));\n\n    const commentBox = (\n      await canvas.findAllByRole(\"purpose-comment\", {\n        name: \"box\",\n      })\n    )[i];\n    const pallette = await canvas.findByRole(\"purpose-comment\", {\n      name: \"palette-icon\",\n    });\n    await userEvent.click(pallette);\n    const green = await canvas.findByRole(\"purpose-comment\", {\n      name: \"color-icon-green\",\n    });\n    await userEvent.click(green);\n    expect(commentBox).toHaveClass(/green/);\n    expect(commentBox).not.toHaveClass(/red/);\n    expect(commentBox).not.toHaveClass(/blue/);\n    const red = await canvas.findByRole(\"purpose-comment\", {\n      name: \"color-icon-red\",\n    });\n    expect(red).toBeInTheDocument;\n    await userEvent.click(red);\n    expect(commentBox).not.toHaveClass(/green/);\n    expect(commentBox).toHaveClass(/red/);\n    expect(commentBox).not.toHaveClass(/blue/);\n\n    const blue = await canvas.findByRole(\"purpose-comment\", {\n      name: \"color-icon-blue\",\n    });\n    await userEvent.click(blue);\n    expect(commentBox).not.toHaveClass(/green/);\n    expect(commentBox).not.toHaveClass(/red/);\n    expect(commentBox).toHaveClass(/blue/);\n  }\n\n  await userEvent.click(\n    await canvas.findByRole(\"measure\", { name: \"add-box\" })\n  );\n  for (let i = 0; i < 3; i++) {\n    const commentIcon = (\n      await canvas.findAllByRole(\"measure\", {\n        name: \"comment-icon\",\n      })\n    )[i];\n    await userEvent.click(commentIcon);\n\n    const commentArea = (\n      await canvas.findAllByRole(\"measure\", {\n        name: \"comment\",\n      })\n    )[i];\n    expect(commentArea).toBeInTheDocument();\n    const commentTexbox = (\n      await canvas.findAllByRole(\"measure-comment\", {\n        name: `textbox`,\n      })\n    )[i];\n    await userEvent.type(commentTexbox, `施策${i + 1}のコメント`);\n    expect(await canvas.findByDisplayValue(`施策${i + 1}のコメント`));\n\n    const commentBox = (\n      await canvas.findAllByRole(\"measure-comment\", {\n        name: \"box\",\n      })\n    )[i];\n    const pallette = await canvas.findByRole(\"measure-comment\", {\n      name: \"palette-icon\",\n    });\n    await userEvent.click(pallette);\n    const green = await canvas.findByRole(\"measure-comment\", {\n      name: \"color-icon-green\",\n    });\n    await userEvent.click(green);\n    expect(commentBox).toHaveClass(/green/);\n    expect(commentBox).not.toHaveClass(/red/);\n    expect(commentBox).not.toHaveClass(/blue/);\n    const red = await canvas.findByRole(\"measure-comment\", {\n      name: \"color-icon-red\",\n    });\n    expect(red).toBeInTheDocument;\n    await userEvent.click(red);\n    expect(commentBox).not.toHaveClass(/green/);\n    expect(commentBox).toHaveClass(/red/);\n    expect(commentBox).not.toHaveClass(/blue/);\n\n    const blue = await canvas.findByRole(\"measure-comment\", {\n      name: \"color-icon-blue\",\n    });\n    await userEvent.click(blue);\n    expect(commentBox).not.toHaveClass(/green/);\n    expect(commentBox).not.toHaveClass(/red/);\n    expect(commentBox).toHaveClass(/blue/);\n  }\n};\n\nexport const previewTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  const elements = await canvas.findByRole(\"elements\", { name: \"box\" });\n  expect(elements).toBeInTheDocument();\n\n  type LabelType = {\n    [K in string]: string;\n  };\n  const elementLabels: LabelType = {\n    people: \"ひと\",\n    money: \"お金\",\n    time: \"時間\",\n    quality: \"クオリティ\",\n    businessScheme: \"商流 / 座組\",\n    environment: \"環境\",\n    rival: \"ライバル\",\n    foreignEnemy: \"外敵\",\n  };\n  for (const key of Object.keys(elementLabels)) {\n    expect(\n      await canvas.findByRole(\"element\", {\n        name: `comment-icon-${key}`,\n      })\n    ).toBeInTheDocument();\n    expect(\n      await canvas.findByDisplayValue(`${elementLabels[key]}のコメント`)\n    ).toBeInTheDocument();\n    const textbox = await canvas.findByRole(\"element\", {\n      name: `${key}-textbox`,\n    });\n    expect(textbox).toHaveAttribute(\"readonly\");\n    const commentTextbox = await canvas.findByRole(`${key}-comment`, {\n      name: \"textbox\",\n    });\n    expect(commentTextbox).toHaveAttribute(\"readonly\");\n  }\n\n  const objectiveLabels: LabelType = {\n    \"win-condition\": \"勝利条件\",\n    \"gaining-goal\": \"獲得目標\",\n  };\n  for (const key of Object.keys(objectiveLabels)) {\n    const textbox = await canvas.findByRole(key, {\n      name: \"textbox\",\n    });\n    expect(textbox).toHaveAttribute(\"readonly\");\n    const commentTextbox = await canvas.findByRole(`${key}-comment`, {\n      name: \"textbox\",\n    });\n    expect(commentTextbox).toHaveAttribute(\"readonly\");\n    expect(\n      await canvas.findByDisplayValue(`${objectiveLabels[key]}のコメント`)\n    );\n  }\n\n  for (let i = 0; i < 1; i++) {\n    expect(\n      (\n        await canvas.findAllByRole(\"purpose\", {\n          name: \"comment-icon\",\n        })\n      )[i]\n    ).toBeInTheDocument();\n    const textbox = (\n      await canvas.findAllByRole(\"purpose\", {\n        name: `textbox`,\n      })\n    )[i];\n    expect(textbox).toHaveAttribute(\"readonly\");\n    const commentTextbox = (\n      await canvas.findAllByRole(\"purpose-comment\", {\n        name: `textbox`,\n      })\n    )[i];\n    expect(commentTextbox).toHaveAttribute(\"readonly\");\n    expect(await canvas.findByDisplayValue(\"中間目的のコメント\"));\n  }\n\n  for (let i = 0; i < 2; i++) {\n    expect(\n      (\n        await canvas.findAllByRole(\"measure\", {\n          name: \"comment-icon\",\n        })\n      )[i]\n    ).toBeInTheDocument;\n\n    const textbox = (\n      await canvas.findAllByRole(\"measure\", {\n        name: \"textbox\",\n      })\n    )[i];\n    expect(textbox).toHaveAttribute(\"readonly\");\n    const commentTexbox = (\n      await canvas.findAllByRole(\"measure-comment\", {\n        name: `textbox`,\n      })\n    )[i];\n    expect(commentTexbox).toHaveAttribute(\"readonly\");\n    expect(await canvas.findByDisplayValue(`施策${i + 1}のコメント`));\n  }\n};\n","import React from \"react\";\nimport { StoryObj, Meta } from \"@storybook/react\";\nimport {\n  ProjectScore,\n  getScoreJson,\n  setScore,\n} from \"../components/ProjectScore\";\nimport {\n  editTest,\n  feedbackTest,\n  previewTest,\n} from \"../tests/ProjectScore.stories.test\";\nimport {\n  createInitialScoreDataWithComment,\n  createInitialScoreDataWithDuplication,\n} from \"../tests/common\";\nimport { DownloadButton, ImportButton, ModalDialog } from \"./common\";\n\nconst meta = {\n  title: \"pufu-editor/ProjectScore\",\n  component: ProjectScore,\n  parameters: {\n    layout: \"fullscreen\",\n  },\n  tags: [\"autodocs\"],\n} satisfies Meta<typeof ProjectScore>;\n\nexport default meta;\ntype Story = StoryObj<typeof meta>;\n\nexport const Edit: Story = {\n  args: {},\n  play: editTest,\n};\nexport const Feedback: Story = {\n  args: {\n    feedback: true,\n  },\n  play: feedbackTest,\n};\nexport const FeedbackDuplication: Story = {\n  args: {\n    initScore: createInitialScoreDataWithDuplication(),\n    feedback: true,\n  },\n};\nexport const Preview: Story = {\n  args: {\n    initScore: createInitialScoreDataWithComment(),\n    preview: true,\n  },\n  play: previewTest,\n};\nexport const English: Story = {\n  args: {\n    lang: \"en\",\n  },\n  render: function Comp({ ...args }) {\n    return (\n      <>\n        <p>※Docsでは英語表示不可</p>\n        <meta.component {...args}></meta.component>\n      </>\n    );\n  },\n};\nexport const Mobile: Story = {\n  args: {\n    feedback: true,\n    mobile: true,\n  },\n  play: editTest,\n};\n\nexport const Download: Story = {\n  args: {\n    uniqueKey: \"sample\",\n    feedback: true,\n  },\n  render: function Comp({ ...args }) {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const [scoreText, setScoreText] = React.useState(\"\");\n    const [error, setError] = React.useState(\"\");\n    return (\n      <>\n        <DownloadButton scoreKey=\"sample\" kind=\"json\" />\n        <DownloadButton scoreKey=\"sample\" kind=\"png\" />\n        <DownloadButton scoreKey=\"sample\" kind=\"svg\" />\n        <ImportButton\n          onClick={() => {\n            const json = getScoreJson(\"sample\");\n            setScoreText(json!);\n            setIsOpen(true);\n            setError(\"\");\n          }}\n        />\n        <p className=\"ml-8\">ID: sample</p>\n        <meta.component {...args}></meta.component>\n        <ModalDialog\n          open={isOpen}\n          text={scoreText}\n          error={error}\n          onCancel={() => setIsOpen(false)}\n          onChange={(text: string) => {\n            setScoreText(text);\n          }}\n          onOk={() => {\n            try {\n              setError(\"\");\n              setScore(\"sample\", scoreText);\n              setIsOpen(false);\n            } catch (e) {\n              console.error(e);\n              if (e instanceof Error) {\n                setError(e.message);\n              }\n            }\n          }}\n        />\n      </>\n    );\n  },\n};\n\nexport const NoBorder: Story = {\n  args: {\n    initScore: createInitialScoreDataWithComment(),\n    feedback: true,\n    border: false,\n  },\n};\n\nexport const TextBase: Story = {\n  args: {\n    initScore: createInitialScoreDataWithComment(),\n    feedback: false,\n    textSize: \"base\",\n  },\n};\nexport const TextLarge: Story = {\n  args: {\n    initScore: createInitialScoreDataWithComment(),\n    feedback: true,\n    textSize: \"large\",\n  },\n};\n"],"names":["cov_24vyh2n7ts","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","addPurpose","canvas","num","f","userEvent","click","findByRole","name","purposes","findAllByRole","expect","length","toBe","type","findByDisplayValue","toBeInTheDocument","addMeasure","measures","addMeasureByIcon","iconNum","getPurpose","getPurposeCount","getMeasure","getMeasureCount","createInitialScoreDataWithDuplication","score","createInitialScoreDataWithComment","defaultValueWithComment","defaultMeasureValueWithComment","push","winCondition","gainingGoal","elements","people","money","time","quality","businessScheme","environment","cov_4039m2ats","editTest","canvasElement","within","labels","rival","foreignEnemy","key","Object","keys","box","findByText","RegExp","findByPlaceholderText","measureTexboxes","i","Number","toHaveTextContent","feedbackTest","elementLabels","commentIcon","commentArea","commentTexbox","commentBox","pallette","b","red","toHaveClass","not","blue","green","objectiveLabels","textbox","previewTest","meta","title","component","ProjectScore","parameters","layout","tags","Edit","args","play","Feedback","feedback","FeedbackDuplication","initScore","Preview","preview","English","lang","render","jsxs","Fragment","jsx","Mobile","mobile","Download","uniqueKey","isOpen","setIsOpen","React","useState","scoreText","setScoreText","error","setError","DownloadButton","ImportButton","json","getScoreJson","ModalDialog","text","setScore","e","console","Error","message","NoBorder","border","TextBase","textSize","TextLarge","docs","source","originalSource"],"mappings":"qdAyBU,SAAAA,GAAA,CAAA,IAAAC,EAAA,gEAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,gEAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KA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"}
{"version":3,"file":"6_IntermediatePurpose.stories-R2Fc8dxv.js","sources":["../../src/tests/IntermediatePurpose.stories.test.ts"],"sourcesContent":["import { within, userEvent, expect } from \"@storybook/test\";\n\ninterface StorybookTestProps {\n  canvasElement: HTMLElement;\n}\n\nexport const editTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"box\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByPlaceholderText(\"中間目的を入力\")\n  ).toBeInTheDocument();\n\n  const textbox = await canvas.findByRole(\"purpose\", { name: \"textbox\" });\n  await userEvent.click(textbox);\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"delete-icon\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"up-icon\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"down-icon\" })\n  ).toBeInTheDocument();\n\n  await userEvent.type(textbox, \"サンプルテキストです\");\n  expect(\n    await canvas.findByDisplayValue(\"サンプルテキストです\")\n  ).toBeInTheDocument();\n};\n\nexport const topTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"box\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByDisplayValue(\"サンプルテキストです。\")\n  ).toBeInTheDocument();\n\n  const textbox = await canvas.findByRole(\"purpose\", { name: \"textbox\" });\n  expect(textbox).toBeInTheDocument();\n  expect(canvas.queryByRole(\"purpose\", { name: \"closee-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n\n  await userEvent.click(textbox);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"delete-icon\" })\n  ).toBeInTheDocument();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"down-icon\" })\n  ).toBeInTheDocument();\n};\n\nexport const bottomTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"box\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByDisplayValue(\"サンプルテキストです。\")\n  ).toBeInTheDocument();\n\n  const textbox = await canvas.findByRole(\"purpose\", { name: \"textbox\" });\n  expect(textbox).toBeInTheDocument();\n  expect(canvas.queryByRole(\"purpose\", { name: \"delete-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  ).toBeInTheDocument();\n\n  await userEvent.click(textbox);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"delete-icon\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"up-icon\" })\n  ).toBeInTheDocument();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  ).toBeInTheDocument();\n};\n\nexport const feedbackTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"box\" })\n  ).toBeInTheDocument();\n  expect(\n    await canvas.findByDisplayValue(\"サンプルテキストです。\")\n  ).toBeInTheDocument();\n\n  const textbox = await canvas.findByRole(\"purpose\", { name: \"textbox\" });\n  expect(textbox).toBeInTheDocument();\n  expect(canvas.queryByRole(\"purpose\", { name: \"delete-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  ).toBeInTheDocument();\n\n  await userEvent.click(textbox);\n\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"delete-icon\" })\n  ).toBeInTheDocument();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n  expect(\n    await canvas.findByRole(\"purpose\", { name: \"add-icon\" })\n  ).toBeInTheDocument();\n\n  const commentIcon = await canvas.findByRole(\"purpose\", {\n    name: \"comment-icon\",\n  });\n  await userEvent.click(commentIcon);\n\n  const commentArea = await canvas.findByRole(\"purpose\", {\n    name: \"comment\",\n  });\n  expect(commentArea).toBeInTheDocument();\n  const commentTexbox = await canvas.findByRole(\"purpose-comment\", {\n    name: `textbox`,\n  });\n  await userEvent.type(commentTexbox, \"中間目的のコメント\");\n  expect(await canvas.findByDisplayValue(\"中間目的のコメント\"));\n\n  const commentBox = await canvas.findByRole(\"purpose-comment\", {\n    name: \"box\",\n  });\n  const pallette = await canvas.findByRole(\"purpose-comment\", {\n    name: \"palette-icon\",\n  });\n  await userEvent.click(pallette);\n  const green = await canvas.findByRole(\"purpose-comment\", {\n    name: \"color-icon-green\",\n  });\n  await userEvent.click(green);\n  expect(commentBox).toHaveClass(/green/);\n  expect(commentBox).not.toHaveClass(/red/);\n  expect(commentBox).not.toHaveClass(/blue/);\n  const red = await canvas.findByRole(\"purpose-comment\", {\n    name: \"color-icon-red\",\n  });\n  expect(red).toBeInTheDocument;\n  await userEvent.click(red);\n  expect(commentBox).not.toHaveClass(/green/);\n  expect(commentBox).toHaveClass(/red/);\n  expect(commentBox).not.toHaveClass(/blue/);\n\n  const blue = await canvas.findByRole(\"purpose-comment\", {\n    name: \"color-icon-blue\",\n  });\n  await userEvent.click(blue);\n  expect(commentBox).not.toHaveClass(/green/);\n  expect(commentBox).not.toHaveClass(/red/);\n  expect(commentBox).toHaveClass(/blue/);\n};\n\nexport const previewTest = async ({ canvasElement }: StorybookTestProps) => {\n  const canvas = within(canvasElement);\n\n  expect(await canvas.findByRole(\"purpose\", { name: \"box\" }));\n\n  const textbox = await canvas.findByRole(\"purpose\", { name: \"textbox\" });\n  expect(textbox).toHaveAttribute(\"readonly\");\n  expect(await canvas.findByDisplayValue(\"サンプルテキストです。\"));\n\n  expect(canvas.queryByRole(\"purpose\", { name: \"closee-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"add-icon\" })).toBeNull();\n  await userEvent.click(textbox);\n  expect(canvas.queryByRole(\"purpose\", { name: \"closee-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"up-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"down-icon\" })).toBeNull();\n  expect(canvas.queryByRole(\"purpose\", { name: \"add-icon\" })).toBeNull();\n\n  const commentTexbox = await canvas.findByRole(\"purpose-comment\", {\n    name: \"textbox\",\n  });\n  expect(commentTexbox).toHaveAttribute(\"readonly\");\n  expect(await canvas.findByDisplayValue(\"コメントのテキストです。\"));\n};\n"],"names":["cov_2msw26z97n","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","editTest","canvasElement","f","canvas","within","expect","findByRole","name","toBeInTheDocument","findByPlaceholderText","textbox","userEvent","click","type","findByDisplayValue","topTest","queryByRole","toBeNull","bottomTest","feedbackTest","commentIcon","commentArea","commentTexbox","commentBox","pallette","green","red","not","toHaveClass","blue"],"mappings":"iQA8BU,SAAAA,GAAA,CAAA,IAAAC,EAAA,0FAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,0FAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA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"}